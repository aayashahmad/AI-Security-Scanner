[
  {
    "url": "https://ai-security-scanner.vercel.app/",
    "issues": [
      {
        "id": "missing_csp",
        "severity": "high",
        "details": "Add Content-Security-Policy"
      },
      {
        "id": "x_content_type_options",
        "severity": "medium",
        "details": "Set X-Content-Type-Options: nosniff"
      },
      {
        "id": "clickjacking",
        "severity": "medium",
        "details": "Add X-Frame-Options or frame-ancestors in CSP"
      },
      {
        "id": "missing_referrer_policy",
        "severity": "low",
        "details": "Add Referrer-Policy"
      },
      {
        "id": "missing_permissions_policy",
        "severity": "low",
        "details": "Add Permissions-Policy"
      },
      {
        "id": "missing_corp",
        "severity": "low",
        "details": "Add Cross-Origin-Resource-Policy"
      }
    ],
    "links": [],
    "headers": {
      "accept-ranges": "bytes",
      "access-control-allow-origin": "*",
      "age": "630",
      "cache-control": "public, max-age=0, must-revalidate",
      "content-disposition": "inline",
      "content-length": "22055",
      "content-type": "text/html; charset=utf-8",
      "date": "Tue, 02 Sep 2025 06:31:39 GMT",
      "etag": "\"e2a6493e8e85fe63b7b18ec61b02d351\"",
      "last-modified": "Tue, 02 Sep 2025 06:21:08 GMT",
      "server": "Vercel",
      "strict-transport-security": "max-age=63072000; includeSubDomains; preload",
      "x-vercel-cache": "HIT",
      "x-vercel-id": "bom1::rhn28-1756794699560-f8f3f00c10cb",
      "connection": "close"
    },
    "content": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>AI Security Scanner</title>\n    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\">\n    <style>\n        :root {\n            --primary-color: #4361ee;\n            --secondary-color: #3a0ca3;\n            --success-color: #4cc9f0;\n            --warning-color: #f72585;\n            --light-color: #f8f9fa;\n            --dark-color: #212529;\n        }\n        \n        body {\n            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n            line-height: 1.6;\n            background-color: #f8f9fa;\n            color: #333;\n            min-height: 100vh;\n            display: flex;\n            flex-direction: column;\n        }\n        \n        .main-container {\n            flex: 1;\n            padding: 2rem 0;\n        }\n        \n        .app-container {\n            max-width: 1000px;\n            margin: 0 auto;\n            background-color: #fff;\n            padding: 2rem;\n            border-radius: 12px;\n            box-shadow: 0 5px 20px rgba(0, 0, 0, 0.1);\n        }\n        \n        .app-header {\n            text-align: center;\n            margin-bottom: 2rem;\n            padding-bottom: 1rem;\n            border-bottom: 1px solid #eee;\n        }\n        \n        .app-title {\n            color: var(--primary-color);\n            font-weight: 700;\n            margin-bottom: 0.5rem;\n        }\n        \n        .app-subtitle {\n            color: #6c757d;\n            font-size: 1.1rem;\n        }\n        \n        .form-control:focus {\n            border-color: var(--primary-color);\n            box-shadow: 0 0 0 0.25rem rgba(67, 97, 238, 0.25);\n        }\n        \n        .btn-primary {\n            background-color: var(--primary-color);\n            border-color: var(--primary-color);\n        }\n        \n        .btn-primary:hover {\n            background-color: var(--secondary-color);\n            border-color: var(--secondary-color);\n        }\n        \n        .btn-success {\n            background-color: var(--success-color);\n            border-color: var(--success-color);\n        }\n        \n        .btn-success:hover {\n            background-color: #3db8dc;\n            border-color: #3db8dc;\n        }\n        \n        .scan-options {\n            background-color: #f8f9fa;\n            padding: 1rem;\n            border-radius: 8px;\n            margin-bottom: 1.5rem;\n        }\n        \n        .progress-container {\n            margin: 2rem 0;\n            display: none;\n        }\n        \n        .progress {\n            height: 10px;\n            border-radius: 5px;\n        }\n        \n        .results-container {\n            display: none;\n            margin-top: 2rem;\n            padding-top: 2rem;\n            border-top: 1px solid #eee;\n        }\n        \n        .stat-card {\n            text-align: center;\n            padding: 1.5rem;\n            border-radius: 10px;\n            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);\n            transition: transform 0.3s;\n            height: 100%;\n        }\n        \n        .stat-card:hover {\n            transform: translateY(-5px);\n        }\n        \n        .stat-value {\n            font-size: 2rem;\n            font-weight: 700;\n            margin: 0.5rem 0;\n            color: var(--primary-color);\n        }\n        \n        .stat-label {\n            color: #6c757d;\n            font-size: 0.9rem;\n            text-transform: uppercase;\n            letter-spacing: 1px;\n        }\n        \n        .summary-container {\n            background-color: #f8f9fa;\n            padding: 1.5rem;\n            border-radius: 10px;\n            margin: 2rem 0;\n            white-space: pre-line;\n            line-height: 1.8;\n        }\n        \n        .summary-title {\n            color: var(--primary-color);\n            margin-bottom: 1rem;\n            font-weight: 600;\n        }\n        \n        .download-btn {\n            margin-top: 1.5rem;\n        }\n        \n        .creator-info {\n            text-align: center;\n            margin-top: 2rem;\n            padding-top: 1.5rem;\n            border-top: 1px solid #eee;\n            color: #6c757d;\n        }\n        \n        .scan-url-display {\n            font-size: 0.9rem;\n            color: #6c757d;\n            margin-bottom: 0.5rem;\n            word-break: break-all;\n        }\n        \n        .feature-icon {\n            font-size: 1.5rem;\n            margin-bottom: 0.5rem;\n            color: var(--primary-color);\n        }\n        \n        .features-section {\n            margin: 2rem 0;\n        }\n        \n        .feature-card {\n            text-align: center;\n            padding: 1.5rem;\n            border-radius: 10px;\n            background-color: #f8f9fa;\n            height: 100%;\n        }\n        \n        .error-alert {\n            display: none;\n            margin-top: 1rem;\n        }\n        \n        /* Responsive adjustments */\n        @media (max-width: 768px) {\n            .app-container {\n                padding: 1.5rem;\n            }\n            \n            .stat-value {\n                font-size: 1.5rem;\n            }\n        }\n    </style>\n</head>\n<body>\n    <div class=\"main-container\">\n        <div class=\"container app-container\">\n            <div class=\"app-header\">\n                <h1 class=\"app-title\">AI Security Scanner</h1>\n                <p class=\"app-subtitle\">Comprehensive website security analysis with AI-powered insights</p>\n            </div>\n            \n            <div class=\"row features-section\">\n                <div class=\"col-md-4 mb-4\">\n                    <div class=\"feature-card\">\n                        <div class=\"feature-icon\"><i class=\"fas fa-search\"></i></div>\n                        <h5>Deep Scanning</h5>\n                        <p class=\"small\">Scans entire websites including subpages for comprehensive security analysis</p>\n                    </div>\n                </div>\n                <div class=\"col-md-4 mb-4\">\n                    <div class=\"feature-card\">\n                        <div class=\"feature-icon\"><i class=\"fas fa-shield-alt\"></i></div>\n                        <h5>Security Analysis</h5>\n                        <p class=\"small\">Identifies vulnerabilities, misconfigurations, and security best practices</p>\n                    </div>\n                </div>\n                <div class=\"col-md-4 mb-4\">\n                    <div class=\"feature-card\">\n                        <div class=\"feature-icon\"><i class=\"fas fa-file-pdf\"></i></div>\n                        <h5>Detailed Reports</h5>\n                        <p class=\"small\">Generates comprehensive PDF reports with actionable recommendations</p>\n                    </div>\n                </div>\n            </div>\n            \n            <form id=\"scanForm\">\n                <div class=\"scan-options\">\n                    <div class=\"row\">\n                        <div class=\"col-md-8 mb-3\">\n                            <label for=\"urlInput\" class=\"form-label\">Website URL</label>\n                            <div class=\"input-group\">\n                                <span class=\"input-group-text\"><i class=\"fas fa-globe\"></i></span>\n                                <input type=\"url\" class=\"form-control\" id=\"urlInput\" name=\"url\" placeholder=\"https://example.com\" required>\n                            </div>\n                        </div>\n                        <div class=\"col-md-4 mb-3\">\n                            <label for=\"scanDepth\" class=\"form-label\">Scan Depth</label>\n                            <select class=\"form-select\" id=\"scanDepth\" name=\"scanDepth\">\n                                <option value=\"50\">Light (up to 50 pages)</option>\n                                <option value=\"100\">Medium (up to 100 pages)</option>\n                                <option value=\"200\" selected>Deep (up to 200 pages)</option>\n                                <option value=\"500\">Thorough (up to 500 pages)</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div class=\"row mt-2\">\n                        <div class=\"col-12\">\n                            <button type=\"submit\" id=\"scanButton\" class=\"btn btn-primary w-100\">\n                                <i class=\"fas fa-shield-alt me-2\"></i> Start Security Scan\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n            \n            <div class=\"alert alert-danger error-alert\" id=\"errorMessage\" role=\"alert\">\n                <i class=\"fas fa-exclamation-triangle me-2\"></i>\n                <span id=\"errorText\"></span>\n            </div>\n            \n            <div class=\"progress-container\" id=\"progressContainer\">\n                <div class=\"d-flex justify-content-between mb-2\">\n                    <span>Scanning in progress...</span>\n                    <span id=\"progressText\">0%</span>\n                </div>\n                <div class=\"progress\">\n                    <div id=\"progressBar\" class=\"progress-bar progress-bar-striped progress-bar-animated\" role=\"progressbar\" style=\"width: 0%\"></div>\n                </div>\n                <p class=\"mt-2 small text-muted\" id=\"currentUrlText\">Initializing scan...</p>\n            </div>\n            \n            <div class=\"results-container\" id=\"resultsContainer\">\n                <h3 class=\"mb-4 text-center\">Scan Results</h3>\n                \n                <div class=\"scan-url-display mb-3\" id=\"scannedUrlDisplay\"></div>\n                \n                <div class=\"row\">\n                    <div class=\"col-md-4 mb-4\">\n                        <div class=\"stat-card bg-light\">\n                            <div class=\"stat-label\">Security Score</div>\n                            <div class=\"stat-value\" id=\"scoreValue\">0%</div>\n                            <div class=\"progress mt-2\" style=\"height: 5px;\">\n                                <div id=\"scoreProgressBar\" class=\"progress-bar\" role=\"progressbar\" style=\"width: 0%\"></div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-4 mb-4\">\n                        <div class=\"stat-card bg-light\">\n                            <div class=\"stat-label\">Issues Found</div>\n                            <div class=\"stat-value\" id=\"issuesValue\">0</div>\n                            <div class=\"small text-muted\" id=\"issuesBreakdown\"></div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-4 mb-4\">\n                        <div class=\"stat-card bg-light\">\n                            <div class=\"stat-label\">Pages Scanned</div>\n                            <div class=\"stat-value\" id=\"pagesValue\">0</div>\n                            <div class=\"small text-muted\">Complete site analysis</div>\n                        </div>\n                    </div>\n                </div>\n                \n                <div class=\"summary-container\">\n                    <h4 class=\"summary-title\">Analysis Summary</h4>\n                    <div class=\"summary\" id=\"summaryContent\"></div>\n                </div>\n                \n                <div class=\"text-center\">\n                    <a id=\"downloadLink\" class=\"btn btn-success download-btn\" style=\"display: none;\">\n                        <i class=\"fas fa-file-pdf me-2\"></i> Download PDF Report\n                    </a>\n                </div>\n            </div>\n            \n            <div class=\"creator-info\">\n                <p>Created by Ayash Ahmad | Email: bhatashu666@gmail.com</p>\n            </div>\n        </div>\n    </div>\n\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\"></script>\n    <script>\n        document.addEventListener('DOMContentLoaded', function() {\n            const scanForm = document.getElementById('scanForm');\n            const scanButton = document.getElementById('scanButton');\n            const progressContainer = document.getElementById('progressContainer');\n            const progressBar = document.getElementById('progressBar');\n            const progressText = document.getElementById('progressText');\n            const currentUrlText = document.getElementById('currentUrlText');\n            const resultsContainer = document.getElementById('resultsContainer');\n            const errorMessage = document.getElementById('errorMessage');\n            const errorText = document.getElementById('errorText');\n            const scoreValue = document.getElementById('scoreValue');\n            const scoreProgressBar = document.getElementById('scoreProgressBar');\n            const issuesValue = document.getElementById('issuesValue');\n            const issuesBreakdown = document.getElementById('issuesBreakdown');\n            const pagesValue = document.getElementById('pagesValue');\n            const summaryContent = document.getElementById('summaryContent');\n            const downloadLink = document.getElementById('downloadLink');\n            const scannedUrlDisplay = document.getElementById('scannedUrlDisplay');\n            \n            // WebSocket for real-time updates\n            let socket;\n            let scanInProgress = false;\n            \n            function initWebSocket(url) {\n                // Check if WebSocket is supported\n                if (!window.WebSocket) {\n                    showError('Your browser does not support WebSockets. Real-time updates will not be available.');\n                    return false;\n                }\n                \n                try {\n                    // Create WebSocket connection\n                    const wsProtocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:';\n                    const wsUrl = `${wsProtocol}//${window.location.host}/scan-progress`;\n                    socket = new WebSocket(wsUrl);\n                    \n                    socket.onopen = function() {\n                        console.log('WebSocket connection established');\n                        socket.send(JSON.stringify({ type: 'start', url: url }));\n                    };\n                    \n                    socket.onmessage = function(event) {\n                        const data = JSON.parse(event.data);\n                        \n                        if (data.type === 'progress') {\n                            updateProgress(data.current, data.total, data.url);\n                        } else if (data.type === 'complete') {\n                            completeProgress();\n                        }\n                    };\n                    \n                    socket.onerror = function(error) {\n                        console.error('WebSocket error:', error);\n                    };\n                    \n                    socket.onclose = function() {\n                        console.log('WebSocket connection closed');\n                    };\n                    \n                    return true;\n                } catch (error) {\n                    console.error('Error initializing WebSocket:', error);\n                    return false;\n                }\n            }\n            \n            function updateProgress(current, total, url) {\n                const percent = Math.min(Math.round((current / total) * 100), 100);\n                progressBar.style.width = `${percent}%`;\n                progressText.textContent = `${percent}%`;\n                currentUrlText.textContent = `Scanning: ${url}`;\n            }\n            \n            function completeProgress() {\n                progressBar.style.width = '100%';\n                progressText.textContent = '100%';\n                currentUrlText.textContent = 'Scan complete! Generating report...';\n            }\n            \n            scanForm.addEventListener('submit', function(e) {\n                e.preventDefault();\n                \n                if (scanInProgress) {\n                    return;\n                }\n                \n                // Get the URL and scan depth\n                const url = document.getElementById('urlInput').value.trim();\n                const scanDepth = document.getElementById('scanDepth').value;\n                \n                // Validate URL\n                if (!url) {\n                    showError('Please enter a valid URL');\n                    return;\n                }\n                \n                // Reset previous results\n                resetResults();\n                \n                // Show progress container\n                progressContainer.style.display = 'block';\n                scanButton.disabled = true;\n                scanInProgress = true;\n                \n                // Initialize WebSocket for real-time updates\n                const wsInitialized = initWebSocket(url);\n                \n                // If WebSocket initialization failed, show a message but continue with the scan\n                if (!wsInitialized) {\n                    currentUrlText.textContent = 'Scanning in progress (without real-time updates)...';\n                }\n                \n                // Send the request to the server\n                fetch('/scan', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({ \n                        url: url,\n                        maxPages: parseInt(scanDepth)\n                    })\n                })\n                .then(response => {\n                    if (!response.ok) {\n                        return response.json().then(data => {\n                            throw new Error(data.error || 'An error occurred during the scan');\n                        });\n                    }\n                    return response.json();\n                })\n                .then(data => {\n                    // Hide progress container\n                    progressContainer.style.display = 'none';\n                    \n                    // Show results\n                    resultsContainer.style.display = 'block';\n                    \n                    // Display scanned URL\n                    scannedUrlDisplay.textContent = `Scanned URL: ${url}`;\n                    \n                    // Update stats\n                    const score = data.overallScore;\n                    scoreValue.textContent = `${score}%`;\n                    scoreProgressBar.style.width = `${score}%`;\n                    \n                    // Set color based on score\n                    if (score >= 80) {\n                        scoreProgressBar.className = 'progress-bar bg-success';\n                    } else if (score >= 60) {\n                        scoreProgressBar.className = 'progress-bar bg-warning';\n                    } else {\n                        scoreProgressBar.className = 'progress-bar bg-danger';\n                    }\n                    \n                    issuesValue.textContent = data.issueCount;\n                    \n                    // Add issues breakdown if available\n                    if (data.issuesBreakdown) {\n                        issuesBreakdown.textContent = `${data.issuesBreakdown.critical || 0} critical, ${data.issuesBreakdown.high || 0} high, ${data.issuesBreakdown.medium || 0} medium, ${data.issuesBreakdown.low || 0} low`;\n                    }\n                    \n                    pagesValue.textContent = data.pagesScanned;\n                    \n                    // Update summary\n                    summaryContent.textContent = data.summary;\n                    \n                    // Set download link\n                    if (data.pdfPath) {\n                        downloadLink.href = data.pdfPath;\n                        downloadLink.style.display = 'inline-block';\n                    }\n                    \n                    // Re-enable scan button\n                    scanButton.disabled = false;\n                    scanInProgress = false;\n                    \n                    // Close WebSocket if it exists\n                    if (socket && socket.readyState === WebSocket.OPEN) {\n                        socket.close();\n                    }\n                })\n                .catch(error => {\n                    // Hide progress container\n                    progressContainer.style.display = 'none';\n                    \n                    // Show error message\n                    showError(error.message);\n                    \n                    // Re-enable scan button\n                    scanButton.disabled = false;\n                    scanInProgress = false;\n                    \n                    // Close WebSocket if it exists\n                    if (socket && socket.readyState === WebSocket.OPEN) {\n                        socket.close();\n                    }\n                });\n            });\n            \n            function resetResults() {\n                resultsContainer.style.display = 'none';\n                errorMessage.style.display = 'none';\n                progressBar.style.width = '0%';\n                progressText.textContent = '0%';\n                currentUrlText.textContent = 'Initializing scan...';\n                scoreValue.textContent = '0%';\n                scoreProgressBar.style.width = '0%';\n                issuesValue.textContent = '0';\n                issuesBreakdown.textContent = '';\n                pagesValue.textContent = '0';\n                summaryContent.textContent = '';\n                scannedUrlDisplay.textContent = '';\n                downloadLink.href = '#';\n                downloadLink.style.display = 'none';\n            }\n            \n            function showError(message) {\n                errorText.textContent = message;\n                errorMessage.style.display = 'block';\n            }\n        });\n    </script>\n</body>\n</html>",
    "score": {
      "total": 120,
      "penalty": 45,
      "pct": 63
    }
  }
]